// 18.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <windows.h>
using namespace std;

void n1()
{
    cout << "1. Даны массивы A и B одинакового размера N. Поменять местами их содержимое и вывести вначале элементы преобразованного массива A, а затем — элементы преобразованного массива B.\n";
    int i,x,N,A[100] = {}, B[100] = {};
    cout << "Введите размеры массивов А и B" << "\n";
    cin >> N;
    cout << "Массив А: ";
    for (i = 0; i < N; i++)
    {
        cin >> x;
        A[i] = x;
    }

    cout << "Массив B: ";
    for (i = 0; i < N; i++)
    {
        cin >> x;
        B[i] = x;
    }

    for (i = 0; i < N; i++)
    {
        x = A[i];
        A[i] = B[i];
        B[i] = x;
    }
    cout << "Измененный массив А: ";
    for (i = 0; i < N; i++)
    {
        cout << A[i] << " ";;
    }
    cout << "\n";
    cout << "Измененный массив B: ";
    for (i = 0; i < N; i++)
    {
        cout << B[i] << " ";
    }
}

void n2()
{
    cout << "2. Дан массив A размера N. Сформировать новый массив B того же размера по следующему правилу: элемент BK равен среднему арифметическому элементов массива A с номерами от 1 до K.\n";
    int i, N, j, K;
    float arr1[100], arr2[100], S, SA;
    cout << "Введите размер массива: ";
    cin >> N;
    cout << "Введите значение К: ";
    cin >> K;
    cout << "Введите сам массив:\n";
    for (i = 0; i < N; i++)
    {
        cin >> arr1[i];
    }
    for (i = 0; i < N; i++)
    {
        S = 0;
        for (j = 0; j < K; j++)
        {
            S += arr1[j];
        }
        SA = S / K;
    }
    cout << "Новый массив:\n";
    for (i = 0; i < K; i++)
    {
        arr2[i] = arr1[i] + SA;
        cout << arr2[i] << " ";
    }
    for (i = K; i < N; i++)
    {
        arr2[i] = arr1[i];
        cout << arr2[i] << " ";
    }
}
void n3()
{
    cout << "3. Дан целочисленный массив размера N. Увеличить все нечетные числа, содержащиеся в массиве, на исходное значение последнего нечетного числа. Если нечетные числа в массиве отсутствуют, то оставить массив без изменений\n";
    int i, N;
    int A[100] = {};
    int x, m=1;
    cout << "Введите размеры массивов А" << "\n";
    cin >> N;
    cout << "Массив А: ";
    for (i = 0; i < N; i++)
    {
        cin >> x;
        A[i] = x;
        if (x % 2 != 0 and x != 0)
        {
            m = x;
        }
    } 
    for (i = 0; i < N; i++)
    {
        if (A[i] % 2 != 0 and A[i] != 0)
        {
            cout << (A[i] + m) << " ";
        }
        else
        {
            cout << A[i] << " ";
        }
    }
}
void n4()
{
    cout << "4. Дан массив размера N. Обнулить элементы массива, расположенные между его минимальным и максимальным элементами (не включая минимальный и максимальный элементы).\n";
    int i, N;
    int A[100] = {};
    int x, max=0, min=10000, ix = 0, in=0;
    cout << "Введите размеры массивов А" << "\n";
    cin >> N;
    cout << "Массив А: ";
    for (i = 0; i < N; i++)
    {
        cin >> x;
        A[i] = x;
        if (x > max)
        {
            max = x;
            ix = i;
        }
        if (x < min)
        {
            min = x;
            in = i;
        }
    }
    if (in > ix)
    {
        for (i = ix + 1; i < in; i++)
        {
            A[i] = 0;
        }
    }
    else
    {
        for (i = in + 1; i < ix; i++)
        {
            A[i] = 0;
        }
    }
    for (i = 0; i < N; i++)
    {
        cout << A[i] << " ";
    }
}

void n5()
{
    cout << "2. Дан массив A размера N. Сформировать новый массив B того же размера по следующему правилу: элемент BK равен среднему арифметическому элементов массива A с номерами от 1 до K.\n";
    int i, N;
    int A[100] = {};
    int x;
    cout << "Введите размеры массивов А" << "\n";
    cin >> N;
    cout << "Массив А: ";
    for (i = 0; i < N; i++)
    {
        cin >> x;
        A[i] = x;
    }
    for (i = 0; i < N - 1; i++)
    {
        if (A[i] > A[i + 1])
        {
            x = A[i + 1];
            A[i + 1] = A[i];
            A[i] = x;
        }
    }
    for (i = 0; i < N; i++)
    {
        cout << A[i] << " ";
    }
}
int main()
{
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);

    int n0 = 0;
    int k = -1;
    while (k != 0)
    {
        cout << "\nВведите номер задания Лабораторной №18\n\n";
        cin >> n0;
        if (n0 == 0)
        {
            cout << "Выход из программы...";
            k = 0;
        }
        if (n0 == 1)
        {
            n1();
        }
        if (n0 == 2)
        {
            n2();
        }
        if (n0 == 3)
        {
            n3();
        }
        if (n0 == 4)
        {
            n4();
        }
        if (n0 == 5)
        {
            n5();
        }
    }
}


// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
